sre, graylog, ConfigMap (v1) has changed:
  # Source: graylog/templates/configmap.yaml
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: graylog
    labels:
      helm.sh/chart: graylog-1.7.3
      app.kubernetes.io/name: graylog
      app.kubernetes.io/instance: "graylog"
      app.kubernetes.io/managed-by: "Tiller"
      app.kubernetes.io/version: "3.3.8"
  data:
    log4j2.xml: |-
      <?xml version="1.0" encoding="UTF-8"?>
      <Configuration packages="org.graylog2.log4j" shutdownHook="disable">
          <Appenders>
              <Console name="STDOUT" target="SYSTEM_OUT">
                  <PatternLayout pattern="%d %-7level [%c{1}] - %m - %X%n"/>
              </Console>
              <RollingFile name="rolling-file" fileName="/usr/share/graylog/log/server.log" filePattern="/usr/share/graylog/log/server.log.%i.gz">
                  <PatternLayout>
                      <Pattern>%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} %-5p [%c{1}] %m%n</Pattern>
                  </PatternLayout>
                  <Policies>
                      <SizeBasedTriggeringPolicy size="50MB"/>
                  </Policies>
                  <DefaultRolloverStrategy max="10" fileIndex="min"/>
              </RollingFile>
              <!-- Internal Graylog log appender. Please do not disable. This makes internal log messages available via REST calls. -->
              <Memory name="graylog-internal-logs" bufferSize="500"/>
              <!-- Rotate audit logs daily -->
              <RollingFile name="AUDITLOG" fileName="/usr/share/graylog/log/audit.log" filePattern="/usr/share/graylog/log/audit-%d{yyyy-MM-dd}.log.gz">
                  <PatternLayout>
                      <Pattern>%d [%c{1}] - %m - %X%n</Pattern>
                  </PatternLayout>
                  <Policies>
                      <TimeBasedTriggeringPolicy />
                  </Policies>
              </RollingFile>
          </Appenders>
          <Loggers>
              <!-- Application Loggers -->
              <Logger name="org.graylog2" level="warn"/>
              <Logger name="com.github.joschi.jadconfig" level="warn"/>
              <!-- This emits a harmless warning for ActiveDirectory every time which we can't work around :( -->
              <Logger name="org.apache.directory.api.ldap.model.message.BindRequestImpl" level="error"/>
              <!-- Prevent DEBUG message about Lucene Expressions not found. -->
              <Logger name="org.elasticsearch.script" level="warn"/>
              <!-- Disable messages from the version check -->
              <Logger name="org.graylog2.periodical.VersionCheckThread" level="off"/>
              <!-- Suppress crazy byte array dump of Drools -->
              <Logger name="org.drools.compiler.kie.builder.impl.KieRepositoryImpl" level="warn"/>
              <!-- Silence chatty natty -->
              <Logger name="com.joestelmach.natty.Parser" level="warn"/>
              <!-- Silence Kafka log chatter -->
              <Logger name="kafka.log.Log" level="warn"/>
              <Logger name="kafka.log.OffsetIndex" level="warn"/>
              <!-- Silence useless session validation messages -->
              <Logger name="org.apache.shiro.session.mgt.AbstractValidatingSessionManager" level="warn"/>
              <Root level="warn">
                  <AppenderRef ref="STDOUT"/>
              </Root>
              <!-- Security Loggers -->
            <Logger name="org.graylog2.security.realm.PasswordAuthenticator" level="trace" additivity="false">
                  <AppenderRef ref="AUDITLOG"/>
              </Logger>
              <Logger name="org.graylog2.security.realm.AccessTokenAuthenticator" level="trace" additivity="false">
                  <AppenderRef ref="AUDITLOG"/>
              </Logger>
              <Logger name="org.graylog2.security.realm.RootAccountRealm" level="trace" additivity="false">
                  <AppenderRef ref="AUDITLOG"/>
              </Logger>
              <Logger name="org.graylog2.shared.security.ShiroAuthorizationFilter" level="trace" additivity="false">
                  <AppenderRef ref="AUDITLOG"/>
              </Logger>
          </Loggers>
      </Configuration>
    graylog.conf: |-
      node_id_file = /usr/share/graylog/data/journal/node-id
      root_username = cci-admin
      root_email =
      root_timezone = UTC
      plugin_dir = /usr/share/graylog/plugin
      http_bind_address = 0.0.0.0:9000
      http_external_uri = http://localhost:9000/
      elasticsearch_hosts = https://vpc-cci-prod-graylog-b-4fbqlhaaaimakartkummu25sxa.us-east-1.es.amazonaws.com
      allow_leading_wildcard_searches = false
      allow_highlighting = false
      output_batch_size = 500
      output_flush_interval = 1
      output_fault_count_threshold = 5
      output_fault_penalty_seconds = 30
      processbuffer_processors = 5
      outputbuffer_processors = 3
      processor_wait_strategy = blocking
      ring_size = 65536
      inputbuffer_ring_size = 65536
      inputbuffer_processors = 2
      inputbuffer_wait_strategy = blocking
      message_journal_enabled = true
      # Do not change `message_journal_dir` location
      message_journal_dir = /usr/share/graylog/data/journal
      lb_recognition_period_seconds = 3
      # Use a replica set instead of a single host
-     mongodb_uri = mongodb://graylog:xxx@graylog-mongodb.sre.svc.cluster.local/graylog
+     mongodb_uri = ${GRAYLOG_MONGODB_URI}
      mongodb_max_connections = 1000
      mongodb_threads_allowed_to_block_multiplier = 5
      # Email transport
      transport_email_enabled = false
      transport_email_hostname =
      transport_email_port = 2587
      transport_email_use_auth = true
      transport_email_use_tls = true
      transport_email_use_ssl = false
      transport_email_auth_username =
      transport_email_auth_password =
      transport_email_subject_prefix = [graylog]
      transport_email_from_email =
      transport_email_web_interface_url = http://localhost:9000
      content_packs_dir = /usr/share/graylog/data/contentpacks
      content_packs_auto_load = grok-patterns.json
      proxied_requests_thread_pool_size = 32
      rotation_strategy = time
      elasticsearch_max_time_per_index = 1d
      elasticsearch_max_number_of_indices = 31
      retention_strategy = delete
      message_journal_max_size = 140gb

      metrics_datadog_enabled = true
      metrics_datadog_hostname = graylog-cci-prod-a-merged
      metrics_datadog_transport = UDP
      metrics_datadog_udp_address = metrics.kube-system.svc.cluster.local
      metrics_datadog_prefix = graylog
      metrics_datadog_report_interval = 60s

    entrypoint.sh: |-
      #!/usr/bin/env bash

      export GRAYLOG_HTTP_PUBLISH_URI="http://$(hostname -f):9000/"

      GRAYLOG_HOME=/usr/share/graylog
      # Looking for Master IP
      MASTER_IP=`/k8s/kubectl --namespace sre get pod -o jsonpath='{range .items[*]}{.metadata.name} {.status.podIP}{"\n"}{end}' -l graylog-role=master --field-selector=status.phase=Running|awk '{print $2}'`
      SELF_IP=`/k8s/kubectl --namespace sre get pod $HOSTNAME -o jsonpath='{.status.podIP}'`
      echo "Current master is $MASTER_IP"
      echo "Self IP is $SELF_IP"
      if [[ -z "$MASTER_IP" ]]; then
        echo "Launching $HOSTNAME as master"
        export GRAYLOG_IS_MASTER="true"
        /k8s/kubectl --namespace sre label --overwrite pod $HOSTNAME graylog-role="master"
      else
        # When container was recreated or restart, MASTER_IP == SELF_IP, running as master and no need to change label graylog-role="master"
        if [ "$SELF_IP" == "$MASTER_IP" ];then
          export GRAYLOG_IS_MASTER="true"
        else
          # MASTER_IP != SELF_IP, running as coordinating
          echo "Launching $HOSTNAME as coordinating"
          export GRAYLOG_IS_MASTER="false"
          /k8s/kubectl --namespace sre label --overwrite pod $HOSTNAME graylog-role="coordinating"
        fi
      fi
      # Download plugins
      echo "Downloading Graylog Plugins..."
      echo "Downloading https://github.com/graylog-labs/graylog-plugin-metrics-reporter/releases/download/3.0.0/metrics-reporter-datadog-3.0.0.jar ..."
      curl -s --location --retry 3 -o ${GRAYLOG_HOME}/plugin/metrics-reporter-datadog-3.0.0.jar "https://github.com/graylog-labs/graylog-plugin-metrics-reporter/releases/download/3.0.0/metrics-reporter-datadog-3.0.0.jar"
      # Start Graylog
      echo "Starting graylog"
      # Original docker-entrypoint.sh in Graylog Docker will error while executing since you can't chown readonly files in `config`
      # exec /docker-entrypoint.sh graylog
+     # Interpolate
+     sed 's/"/\\\"/g;s/.*/echo "&"/e' ${GRAYLOG_HOME}/config/graylog.conf > ${GRAYLOG_HOME}/graylog.conf.subst
      echo "Graylog Home ${GRAYLOG_HOME}"
      echo "JVM Options ${GRAYLOG_SERVER_JAVA_OPTS}"
      "${JAVA_HOME}/bin/java" \
        ${GRAYLOG_SERVER_JAVA_OPTS} \
        -jar \
        -Dlog4j.configurationFile=${GRAYLOG_HOME}/config/log4j2.xml \
        -Djava.library.path=${GRAYLOG_HOME}/lib/sigar/ \
        -Dgraylog2.installation_source=docker \
        ${GRAYLOG_HOME}/graylog.jar \
        server \
-       -f ${GRAYLOG_HOME}/config/graylog.conf
+       -f ${GRAYLOG_HOME}/graylog.conf.subst
sre, graylog, Secret (v1) has been removed:
- # Source: graylog/templates/secret.yaml
- apiVersion: v1
- kind: Secret
- metadata:
-   labels:
-     app.kubernetes.io/instance: graylog
-     app.kubernetes.io/managed-by: Tiller
-     app.kubernetes.io/name: graylog
-     app.kubernetes.io/version: 3.3.8
-     helm.sh/chart: graylog-1.7.3
-   name: graylog
- data:
-   graylog-password-secret: '-------- # (30 bytes)'
-   graylog-password-sha2: '-------- # (64 bytes)'
-   graylog-root-username: '-------- # (9 bytes)'
- type: Opaque

sre, graylog, StatefulSet (apps) has changed:
  # Source: graylog/templates/statefulset.yaml
  apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: graylog
    labels:
      helm.sh/chart: graylog-1.7.3
      app.kubernetes.io/name: graylog
      app.kubernetes.io/instance: "graylog"
      app.kubernetes.io/managed-by: "Tiller"
      app.kubernetes.io/version: "3.3.8"
  spec:
    serviceName: graylog
    replicas: 20
    selector:
      matchLabels:
        app.kubernetes.io/name: graylog
        app.kubernetes.io/instance: "graylog"
        app.kubernetes.io/managed-by: "Tiller"
    updateStrategy:
      type: RollingUpdate
    template:
      metadata:
        labels:
          helm.sh/chart: graylog-1.7.3
          app.kubernetes.io/name: graylog
          app.kubernetes.io/instance: "graylog"
          app.kubernetes.io/managed-by: "Tiller"
          app.kubernetes.io/version: "3.3.8"
        annotations:
      spec:
        serviceAccountName: graylog
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - graylog
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 1
        initContainers:
          - name: "setup"
            image: "alpine"
            imagePullPolicy: "IfNotPresent"
            # Graylog journal will recursive in every subdirectories. Any invalid format directories will cause errors
            command:
              - /bin/sh
              - -c
              - |
                rm -rf /usr/share/graylog/data/journal/lost+found
                nslookup storage.googleapis.com
                wget https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl -O /k8s/kubectl
                chmod +x /k8s/kubectl

                GRAYLOG_HOME=/usr/share/graylog
                chown -R 1100:1100 ${GRAYLOG_HOME}/data/
            env:
            volumeMounts:
              - name: journal
                mountPath: /usr/share/graylog/data/journal
              - mountPath: /k8s
                name: kubectl
        containers:
          - name: graylog-server
            image: "graylog/graylog:3.3.5"
            imagePullPolicy: "IfNotPresent"
            command:
              - /entrypoint.sh
            env:
              - name: GRAYLOG_SERVER_JAVA_OPTS
                value: "-Djava.net.preferIPv4Stack=true -XX:NewRatio=1 -server -XX:+ResizeTLAB -XX:+UseConcMarkSweepGC -XX:+CMSConcurrentMTEnabled -XX:+CMSClassUnloadingEnabled -XX:+UseParNewGC -XX:-OmitStackTraceInFastThrow -Xms3g -Xmx3g "
              - name: GRAYLOG_PASSWORD_SECRET
                valueFrom:
                  secretKeyRef:
                    name: graylog
                    key: graylog-password-secret
              - name: GRAYLOG_ROOT_PASSWORD_SHA2
                valueFrom:
                  secretKeyRef:
                    name: graylog
                    key: graylog-password-sha2
+             - name: GRAYLOG_MONGODB_URI
+               valueFrom:
+                 secretKeyRef:
+                   name: graylog
+                   key: graylog-mongodb-uri
              - name: DD_AGENT_HOST
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: DD_ENTITY_ID
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.uid
            securityContext:
              privileged: false
            ports:
              - containerPort: 9000
                name: graylog
              - containerPort: 12203
                name: beats
                protocol: TCP
              - containerPort: 12204
                name: beats-vault
                protocol: TCP
              - containerPort: 12202
                name: gelf
                protocol: TCP
            resources:
              limits:
                cpu: "4"
                memory: 6Gi
              requests:
                cpu: "2"
                memory: 6Gi
            livenessProbe:
              httpGet:
                path: /api/system/lbstatus
                port: 9000
              initialDelaySeconds: 120
              periodSeconds: 30
              failureThreshold: 3
              successThreshold: 1
              timeoutSeconds: 5
            readinessProbe:
              httpGet:
                path: /api/system/lbstatus
                port: 9000
              initialDelaySeconds: 60
              periodSeconds: 10
              failureThreshold: 3
              successThreshold: 1
              timeoutSeconds: 5
            volumeMounts:
              - name: journal
                mountPath: /usr/share/graylog/data/journal
              - name: config
                mountPath: /usr/share/graylog/config
              - name: entrypoint
                mountPath: /entrypoint.sh
                subPath: entrypoint.sh
              - name: kubectl
                mountPath: /k8s
            lifecycle:
              preStop:
                exec:
                  command:
                    - bash
                    - -ec
                    - |
                      curl  -XPOST -sS \
                        -u "cci-admin:${GRAYLOG_PASSWORD_SECRET}" \
                        -H "X-Requested-By: graylog" \
                        http://localhost:9000/api/system/shutdown/shutdown
        terminationGracePeriodSeconds: 120
        volumes:
          - name: config
            configMap:
              name: graylog
              items:
                - key: graylog.conf
                  path: graylog.conf
                  mode: 292 # 0444
                - key: log4j2.xml
                  path: log4j2.xml
                  mode: 292 # 0444
          - name: entrypoint
            configMap:
              name: graylog
              items:
                - key: entrypoint.sh
                  path: entrypoint.sh
                  mode: 365 # 0555
          - name: kubectl
            emptyDir: {}
    volumeClaimTemplates:
      - metadata:
          name: journal
        spec:
          accessModes:
            - "ReadWriteOnce"
          storageClassName: "topology-aware-gp2"
          resources:
            requests:
              storage: "141Gi"
